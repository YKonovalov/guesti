# Fedora 20 kickstart customized for anaconda install.
#
# Based on https://git.fedorahosted.org/cgit/cloud-kickstarts.git/plain/generic/fedora-20-cloud.ks
#
# This is a basic Fedora 20 spin designed to work in OpenStack and other
# private cloud environments. It's configured with cloud-init so it will
# take advantage of ec2-compatible metadata services for provisioning ssh
# keys. Cloud-init creates a user account named "fedora" with passwordless
# sudo access. The root password is empty and locked by default.
#
# Note that unlike the standard F20 install, this image has /tmp on disk
# rather than in tmpfs, since memory is usually at a premium.
#
# This kickstart file is designed to be used with appliance-creator and
# may need slight modification for use with actual anaconda or other tools.
# We intend to target anaconda-in-a-vm style image building for F20.

lang en_US.UTF-8
keyboard us
timezone --utc Etc/UTC

text

auth --useshadow --enablemd5
selinux --enforcing
rootpw --lock locked

# Workaround for anaconda asks for local user.
user --name=cloud-user --gecos="Default Cloud User" --lock

firewall --disabled

bootloader --timeout=1 --append="console=ttyS0,115200n8 console=tty0"

network --bootproto=dhcp --device=eth0 --onboot=on
services --disabled network --enabled=NetworkManager,NetworkManager-wait-online,sshd,rsyslog,ntpate,ntpd,cloud-init,cloud-init-local,cloud-config,cloud-final

ignoredisk --only-use=vda
clearpart --all --drives=vda
zerombr
bootloader --location=mbr --driveorder=vda

part / --asprimary --fstype="ext4" --size=999 --label=root --grow

# Repositories
#repo --name=fedora --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=fedora-20&arch=$basearch
#repo --name=fedora-updates --mirrorlist=http://mirrors.fedoraproject.org/mirrorlist?repo=updates-released-f20&arch=$basearch
repo --name=everything     --baseurl=http://mirror.yandex.ru/fedora/linux/releases/20/Everything/x86_64/os
repo --name=fedora-updates --baseurl=http://mirror.yandex.ru/fedora/linux/updates/20/x86_64



poweroff

# Package list.
%packages
@core
grubby
kernel

# cloud-init does magical things with EC2 metadata, including provisioning
# a user account with ssh keys.
cloud-init

# this is used by openstack's cloud orchestration framework (and it's small)
heat-cfntools

# need this for growpart, because parted doesn't yet support resizepart
# https://bugzilla.redhat.com/show_bug.cgi?id=966993
cloud-utils-growpart

# We need this image to be portable; also, rescue mode isn't useful here.
dracut-config-generic
-dracut-config-rescue

# Needed initially, but removed below.
firewalld

# cherry-pick a few things from @standard
tar
rsync
ntp

mc

# Dual-stack init is much better in NM
NetworkManager
NetworkManager-config-server

# Some things from @core we can do without in a minimal install
-biosdevname
-plymouth
-iprutils
-kbd

%end



%post --erroronfail

# setup systemd to boot to the right runlevel
echo -n "Setting default runlevel to multiuser text mode"
rm -f /etc/systemd/system/default.target
ln -s /lib/systemd/system/multi-user.target /etc/systemd/system/default.target
echo .

# If you want to remove rsyslog and just use journald, remove this!
echo -n "Disabling persistent journal"
rmdir /var/log/journal/ 
echo . 

# this is installed by default but we don't need it in virt
echo "Removing linux-firmware package."
yum -C -y remove linux-firmware

# Remove firewalld; was supposed to be optional in F18+, but is required to
# be present for install/image building.
echo "Removing firewalld."
yum -C -y remove firewalld --setopt="clean_requirements_on_remove=1"

# Another one needed at install time but not after that, and it pulls
# in some unneeded deps (like, newt and slang)
echo "Removing authconfig."
yum -C -y remove authconfig --setopt="clean_requirements_on_remove=1"

echo -n "Getty fixes"
# although we want console output going to the serial console, we don't
# actually have the opportunity to login there. FIX.
# we don't really need to auto-spawn _any_ gettys.
sed -i '/^#NAutoVTs=.*/ a\
NAutoVTs=0' /etc/systemd/logind.conf

echo -n "Network fixes"
# initscripts don't like this file to be missing.
cat > /etc/sysconfig/network << EOF
NETWORKING=yes
NOZEROCONF=yes
EOF

# For cloud images, 'eth0' _is_ the predictable device name, since
# we don't want to be tied to specific virtual (!) hardware
rm -f /etc/udev/rules.d/70*
ln -s /dev/null /etc/udev/rules.d/80-net-name-slot.rules

# simple eth0 config, again not hard-coded to the build hardware
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
DEVICE=eth0
TYPE=Ethernet
ONBOOT=yes
BOOTPROTO=dhcp
IPV6INIT=yes
DHCPV6C=yes
DHCPV6C_OPTIONS=-nw
EOF

# generic localhost names
cat > /etc/hosts << EOF
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

EOF
echo .


# Because memory is scarce resource in most cloud/virt environments,
# and because this impedes forensics, we are differing from the Fedora
# default of having /tmp on tmpfs.
echo "Disabling tmpfs for /tmp."
systemctl mask tmp.mount

# appliance-creator does not make this important file.
if [ ! -e /etc/sysconfig/kernel ]; then
echo "Creating /etc/sysconfig/kernel."
cat <<EOF > /etc/sysconfig/kernel
# UPDATEDEFAULT specifies if new-kernel-pkg should make
# new kernels the default
UPDATEDEFAULT=yes

# DEFAULTKERNEL specifies the default kernel package type
DEFAULTKERNEL=kernel
EOF
fi

# make sure firstboot doesn't start
echo "RUN_FIRSTBOOT=NO" > /etc/sysconfig/firstboot

# Uncomment this if you want to use cloud init but suppress the creation
# of an "ec2-user" account. This will, in the absence of further config,
# cause the ssh key from a metadata source to be put in the root account.
#cat <<EOF > /etc/cloud/cloud.cfg.d/50_suppress_ec2-user_use_root.cfg
#users: []
#disable_root: 0
#EOF

# Better use cloud-user for all images
sed -i -e "s/^\([[:blank:]]\+name:[[:blank:]]\+\)fedora$/\1cloud-user/" /etc/cloud/cloud.cfg

echo "Removing random-seed so it's not the same in every image."
rm -f /var/lib/random-seed

echo "Cleaning old yum repodata."
yum history new
yum clean all
truncate -c -s 0 /var/log/yum.log

echo "Fixing SELinux contexts."
/usr/sbin/fixfiles -R -a restore

# put a message on the console
cat << EOF >> /etc/issue
Please note: By default it is not possible to login at this terminal. The system
initially configured for SSH access only. Moreover, a single ssh key - the one
specified at run time could be used to connect to this machine. To access this
system, please run SSH client, choose correct SSH private key and specify
username "cloud-user".

The above notice might not be true if the configuration of the system has been
altered by the administrator of this machine. In later case please consider to
remove this message from /etc/issue file.

EOF

echo "Zeroing out empty space."
# This forces the filesystem to reclaim space from deleted files
dd bs=1M if=/dev/zero of=/var/tmp/zeros || :
rm -f /var/tmp/zeros
echo "(Don't worry -- that out-of-space error was expected.)"

%end
