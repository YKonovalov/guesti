# Ubuntu 14.04 trusty preseed customized for OpenStack.

d-i mirror/manual boolean true
d-i mirror/country string manual
d-i mirror/protocol select http
d-i mirror/http/hostname string mirror.yandex.ru
d-i mirror/http/directory string /ubuntu

# Suite to install.
d-i mirror/suite string trusty
# Suite to use for loading installer components (optional).
d-i mirror/udeb/suite string trusty

d-i debian-installer/allow_unauthenticated string true
d-i partman-lvm/device_remove_lvm boolean true

d-i debian-installer/locale string en_US
d-i keymap select us
d-i keyboard-configuration/xkb-keymap us
d-i console-keymaps-at/keymap select us

d-i netcfg/choose_interface select auto
d-i netcfg/dhcp_timeout string 60
d-i netcfg/dhcp_failed note
d-i netcfg/dhcp_options select Configure network manually
d-i netcfg/get_hostname string cloudguest
d-i netcfg/wireless_wep string
d-i netcfg/target_network_config ifupdown

d-i clock-setup/utc boolean true
d-i time/zone string Europe/Moscow
d-i clock-setup/ntp boolean true

### Remove ISO9660 header to make grub-install happy.
d-i preseed/early_command string dd if=/dev/zero of=/dev/vda bs=1024k count=1

### Partitioning
d-i partman-auto/disk string /dev/vda
d-i partman-auto/method string regular
d-i partman-auto/expert_recipe string root :: \
 999  1000 -1 $default_filesystem label{ root } $primary{ } $bootable{ } \
    method{ format } format{ } use_filesystem{ } $default_filesystem{ } \
    mountpoint{ / } .
d-i partman-auto/choose_recipe select root
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman-basicfilesystems/no_swap boolean false

## Users
d-i passwd/root-login boolean true
d-i passwd/root-password-crypted string !!

d-i passwd/make-user boolean true
d-i passwd/user-fullname string "default cloud user"
d-i passwd/username string cloud-user
d-i passwd/user-password-crypted string !!

## APT
d-i apt-setup/security_host mirror.yandex.ru
d-i apt-setup/volatile_host string

d-i apt-setup/non-free boolean true
d-i apt-setup/contrib boolean false
d-i apt-setup/use_mirror boolean false

d-i apt-setup/universe boolean true
d-i apt-setup/backports boolean true
d-i apt-setup/services-select multiselect

tasksel tasksel/first multiselect ssh-server
d-i pkgsel/install-language-support boolean false
d-i pkgsel/include string linux-virtual openssh-server \
    cloud-init cloud-initramfs-growroot cloud-initramfs-rescuevol \
    vim mc byobu screen tmux w3m man \
    sudo bc curl ndisc6 python-scapy ntp avahi-autoipd \
    acpid fonts-ubuntu-font-family-console
cloud-init cloud-init/datasources multiselect Ec2
cloud-init cloud-init/local-cloud-config string apt_preserve_sources_list: true

### Bootloader
d-i grub-installer/bootdev string /dev/vda
d-i grub-installer/only_debian boolean false
d-i grub-installer/with_other_os boolean false
d-i base-installer/kernel/image string linux-image-virtual
d-i grub-installer/timeout string 1
d-i debian-installer/quiet boolean false
d-i debian-installer/splash boolean false
d-i debian-installer/add-kernel-opts string console=ttyS0,115200n8 apparmor=0

d-i debian-installer/exit/poweroff boolean true
d-i finish-install/reboot_in_progress note

tmpreaper tmpreaper/readsecurity note
tmpreaper tmpreaper/readsecurity_upgrading note

# Clear network iface mapping; force network to wait for dhcp before cloud-init
d-i preseed/late_command string \
    in-target invoke-rc.d apparmor kill; \
    in-target update-rc.d -f apparmor remove; \
    in-target dpkg -r apparmor; \
    in-target rm -f /etc/udev/rules.d/70-persistent-net.rules; \
    in-target sed -i '$ a cloud-user ALL=(ALL) NOPASSWD: ALL' /etc/sudoers; \
    in-target sed -i 's/^\([[:blank:]]\+name:[[:blank:]]\+\)ubuntu$/\1cloud-user/' /etc/cloud/cloud.cfg; \
    in-target sed -i 's;^\([[:blank:]]\+primary:[[:blank:]]\+\).*$;\1http://mirror.yandex.ru/ubuntu;' /etc/cloud/cloud.cfg; \
    in-target sed -i 's;^\([[:blank:]]\+security:[[:blank:]]\+\)http://security.*$;\1http://mirror.yandex.ru/ubuntu;' /etc/cloud/cloud.cfg; \
    in-target sed -i '/^[[:blank:]-]\+http:\/\/%(ec2_region)s.*/ d' /etc/cloud/cloud.cfg; \
    in-target sed -i 's;^\([[:blank:]-]\+\)http:.*$;\1http://mirror.yandex.ru/ubuntu/;' /etc/cloud/cloud.cfg; \
    in-target sed -i "/^preserve_hostname:/ a manage_etc_hosts: false\napt_preserve_sources_list: true\n" /etc/cloud/cloud.cfg; \
    in-target sed -i "/^127.0.0.1[[:blank:]]\+localhost/! s/^\(127.0.\(1\|0\).1[[:blank:]]\+\).*$/\1newborn/" /etc/hosts; \
    in-target sed -i '/^exit 0/ i /usr/sbin/ndisc_update' /etc/rc.local ;\
    printf '[ "$reason" = "BOUND6" ] && /usr/sbin/ndisc_update $new_ip6_address $interface\n" > /target/etc/dhcp/dhclient-exit-hooks.d/ndsend; \
    printf '# duid-uuid-update - update DHCPv6 DUID to the type DUID-UUID from system GUID\n\ndescription "update DHCPv6 DUID"\n\nstart on mounted MOUNTPOINT=/\n\ntask\nconsole output\n\nexec duid-uuid-update\n' >/target/etc/init/duid-uuid-update.conf; \
    printf "newborn\n" > /target/etc/hostname; \
    printf "net.ipv6.conf.eth0.ndisc_notify = 1\nnet.ipv4.conf.eth0.arp_notify = 1\n" >> /target/etc/sysctl.conf; \
    printf 'net.ipv6.conf.eth0.dad_transmits = 0\n' >>/target/etc/sysctl.conf; \
    sed -i "s/^\(net.ipv6.conf.\(all\|default\).use_tempaddr =\).*/\1 0/" /target/etc/sysctl.d/10-ipv6-privacy.conf; \
    printf 'auto lo\niface lo inet loopback\n\n' > /etc/network/interfaces; \
    printf 'auto eth0\niface eth0 inet manual\n'   >> /etc/network/interfaces; \
    printf ' pre-up /usr/sbin/avahi-autoipd -D $IFACE:avahi\n'   >> /etc/network/interfaces; \
    printf ' pre-down /usr/sbin/avahi-autoipd --kill $IFACE:avahi\n'   >> /etc/network/interfaces; \
    printf ' up dhclient -nw -v -pf /run/dhclient.$IFACE.pid -lf /var/lib/dhcp/dhclient.$IFACE.leases $IFACE\n'   >> /etc/network/interfaces; \
    printf ' down dhclient -r -pf /run/dhclient.$IFACE.pid -lf /var/lib/dhcp/dhclient.$IFACE.leases $IFACE\n'   >> /etc/network/interfaces; \
    printf 'iface eth0 inet6 auto\n privext 0\n' >> /etc/network/interfaces; \
    printf 'iface eth0 inet6 manual\n'           >> /etc/network/interfaces; \
    printf ' up dhclient -6 -nw -pf /run/dhclient6.$IFACE.pid -lf /var/lib/dhcp/dhclient6.$IFACE.leases $IFACE\n' >> /etc/network/interfaces; \
    printf ' down dhclient -6 -r -pf /run/dhclient6.$IFACE.pid -lf /var/lib/dhcp/dhclient6.$IFACE.leases $IFACE\n' >> /etc/network/interfaces; \
    printf "#pre-up rdisc6 -1 \$IFACE|grep '^Stateful address conf.\s*:\s*Yes\$'\n" >> /etc/network/interfaces; \
    echo "Please note: By default it is not possible to login at this terminal. The system" >>/target/etc/issue ;\
    echo "initially configured for SSH access only. Moreover, a single ssh key - the one"   >>/target/etc/issue ;\
    echo "specified at run time could be used to connect to this machine. To access this"   >>/target/etc/issue ;\
    echo "system, please run SSH client, choose correct SSH private key and specify"        >>/target/etc/issue ;\
    echo "username \"cloud-user\"."                                                         >>/target/etc/issue ;\
    echo                                                                                    >>/target/etc/issue ;\
    echo "The above notice might not be true if the configuration of the system has been"   >>/target/etc/issue ;\
    echo "altered by the administrator of this machine. In later case please consider to"   >>/target/etc/issue ;\
    echo "remove this message from /etc/issue file."                                        >>/target/etc/issue ;\
    echo                                                                                    >>/target/etc/issue ;\
    echo IyEvdXNyL2Jpbi9lbnYgYmFzaApleHBvcnQgUEFUSD0kUEFUSDovdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW4KCk1FPSR7MCMjKi99Cgptc2coKXsKCWVjaG8gIiQxIgoJbG9nZ2VyIC10ICIke01FfVskJF0iICIkMSIKfQoKaXB2Nl9oZXgoKXsKICBsb2NhbCBpcCBuPQogIGxvY2FsIC1hIHF1YWQKICAgaXA9JDEKICAgIElGUz0nOicgcmVhZCAtcmEgcXVhZCA8PDwiJGlwIgogICAgZm9yIGkgaW4gJHshcXVhZFtAXX07IGRvCglpZiBbIC1uICIke3F1YWRbaV19IiBdOyB0aGVuCgkgICAgbj0iJG5gcHJpbnRmICIlMDR4IiAkKCgxNiMke3F1YWRbaV19KSlgIgoJZWxzZQoJICAgIG49IiRuYHByaW50ZiAiJTAkKCggKDgtJHsjcXVhZFtAXX0rMSkgKiA0ICkpeCJgIgoJZmkKICAgIGRvbmUKICAgIGVjaG8gJG4KfQoKaXB2Nl9leHBhbmRlZF9mcm9tX2hleCgpewogIGxvY2FsIGhleD0kMQogICAgZWNobyAkaGV4fHNlZCAtZSAicy9cKC5cezRcfVwpL1wxOi9nIiAtZSAicy86JC8vInx0ciAnWzp1cHBlcjpdJyAnWzpsb3dlcjpdJwp9CgppcHY2X2V4cGFuZCgpewogIGxvY2FsIGlwIGhleAogICBpcD0kMQogICAgaGV4PSQoaXB2Nl9oZXggJGlwKQogICAgZWNobyAkKGlwdjZfZXhwYW5kZWRfZnJvbV9oZXggJGhleCkKfQoKcGxlbl90b19tYXNrKCl7CiAgbG9jYWwgbWFza2xlbiBvY3RzIG9uZXMgemVyb3MgbQogICBtYXNrbGVuPSQxCiAgICBvY3RzPSQoKG1hc2tsZW4vNCkpCiAgICBvbmVzPSQoIHByaW50ZiAiJSR7cGxlbn1zIiAnICcgKQogICAgemVyb3M9JCggcHJpbnRmICIlJCgobWFza2xlbi1wbGVuKSlzIiAnICcgKSAjIgogICAgbT0ke29uZXMvLyAvMX0ke3plcm9zLy8gLzB9CiAgICBlY2hvICJpYmFzZT0yO29iYXNlPTEwMDAwOyRtInxiYwp9CgppcHY2X21hc2tlZF9hZGRyKCl7CiAgbG9jYWwgaXAgcGxlbiBpbmMgbiBtYXNrIG1hc2tlZCBpbmNlZAogICBpcD0kMQogICBwbGVuPSQyCiAgIGluYz0kezM6LTF9CiAgICBuPSQoaXB2Nl9oZXggJGlwKQogICAgbWFzaz0kKHBsZW5fdG9fbWFzayAxMjggJHBsZW4pCiAgICBtYXNrZWQ9JChwcmludGYgIiUwMTZ4JTAxNnhcbiIgJCgoMTYjJHtuOjA6MTZ9ICYgMTYjJHttYXNrOjA6MTZ9KSkgJCgoMTYjJHtuOjE2OjMyfSAmIDE2IyR7bWFzazoxNjozMn0pKXx0ciAnWzpsb3dlcjpdJyAnWzp1cHBlcjpdJykKICAgIGluY2VkPSQoZWNobyAib2Jhc2U9MTY7aWJhc2U9MTY7JG1hc2tlZCArICRpbmMifGJjKQogICAgZWNobyAkKGlwdjZfZXhwYW5kZWRfZnJvbV9oZXggJGluY2VkKQp9CgpJUD0gSUZBQ0U9IE1BQz0gRU9QVD0gT1VUPQp3aGlsZSB0cnVlOyBkbwoJSVA9CgljYXNlICIke0lQOj0kMX0iIGluCgkJbW9uaXRvcikKCQkJbXNnICJXYWl0aW5nIGZvciBwZXJtYW5lbnQgSVB2NiBhZGRyZXNzLi4uIgoJCQlPPSIkKGlwdjZfd2FpdF9mb3JfZ2xvYmFsX3Blcm1hbmVudCkiCgkJCWlmIFsgLXogIiRPIiBdOyB0aGVuCgkJCQltc2cgIkVSUk9SOiBNb25pdG9yIGV4aXQgd2l0aCBubyByZXN1bHQiCgkJCQlleGl0IDEKCQkJZWxzZQoJCQkJc2V0ICRPCgkJCWZpCgkJCTs7CgkJIiIpCgkJCU89IiQoaXB2Nl9nZXRfZ2xvYmFsX3Blcm1hbmVudCkiCgkJCWlmIFsgLXogIiRPIiBdOyB0aGVuCgkJCQltc2cgIk5vIHBlcm1hbmVudCBJUHY2IGFkZHJlc3NlcyBmb3VuZCIKCQkJCXNldCAibW9uaXRvciIKCQkJZWxzZQoJCQkJc2V0ICRPCgkJCWZpCgkJCTs7CgkJLWh8LS1oZWxwKQoJCQllY2hvICJ1c2FnZTogJDAgW21vbml0b3J8e0lQdjYgYWRkcmVzc31dIFtpbnRlcmZhY2VdIFttYWNdIgoJCQlleGl0IDAKCQkJOzsKCQkqKQoJCQlicmVhawoJCQk7OwoJZXNhYwpkb25lCklGQUNFPSIkezI6LSQoaXB2Nl9nZXRfaWZhY2VfYnlfaXAgJElQKX0iCklGQUNFPSIke0lGQUNFOi0kKGlwdjZfZ2V0X2RlZmF1bHRfaWZhY2UpfSIKTUFDPSIkezM6LSQoaXB2Nl9nZXRfbWFjX2J5X2lmYWNlICRJRkFDRSl9IgpJUExMPSIkKGlwdjZfZ2V0X2lwdjZsbF9ieV9pZmFjZSAkSUZBQ0UpIgpJUExMPSR7SVBMTCUlJSp9CklPUFQ9IiR7SVBMTDorc3JjPVwiJElQTExcIn0iCkVPUFQ9IiR7TUFDOitzcmM9XCIkTUFDXCJ9IgpNQUM9IiR7TUFDOi1hdXRvfSIKCgpOQV9TRU5ERVJTPQpTQ0FQWT0vb3B0L3NjYXB5LTIuMi4wL3J1bl9zY2FweQpmb3IgUyBpbiAkU0NBUFkgJCh3aGljaCBzY2FweSAyPi9kZXYvbnVsbCk7IGRvCglpZiBbIC14ICIkUyIgXTsgdGhlbgoJCVNDQVBZPSRTCgkJTkFfU0VOREVSUz0iJE5BX1NFTkRFUlMgc2VuZF9uYV91c2luZ19zY2FweSIKCWZpCmRvbmUKCk5EU0VORD0kKHdoaWNoIG5kc2VuZCAyPi9kZXYvbnVsbCkKaWYgWyAteCAiJE5EU0VORCIgXTsgdGhlbgoJTkFfU0VOREVSUz0iJE5BX1NFTkRFUlMgc2VuZF9uYV91c2luZ19uZHNlbmQiCmZpCgpzZW5kX25hX3VzaW5nX3NjYXB5KCl7CiBlY2hvICdhPUV0aGVyKCckRU9QVCcpL0lQdjYoJyRJT1BUJykvSUNNUHY2TkRfTkEodGd0PSInJElQJyIsUj0wKTtzZW5kcChhL0lDTVB2Nk5ET3B0RHN0TExBZGRyKGxsYWRkcj1hLnNyYyksaWZhY2U9IickSUZBQ0UnIiknfAogaWYgT1VUPSIkKCRTQ0FQWSAyPiYxKSI7IGVjaG8gIiRPVVQifGdyZXAgXlNlbnQgPi9kZXYvbnVsbDsgdGhlbgoJcmV0dXJuIDAKIGVsc2UKCWVjaG8gIiRAXG4kT1VUXG4ifHNlZCAicy9bXls6cHJpbnQ6XV0qLy9nIiA+JjIKCXJldHVybiAxCiBmaQp9CgpzZW5kX25hX3VzaW5nX25kc2VuZCgpewogJE5EU0VORCAkSVAgJElGQUNFCn0KCmZvciBzZW5kZXIgaW4gJE5BX1NFTkRFUlM7IGRvCglpZiAkc2VuZGVyOyB0aGVuCgkJbXNnICJVbnNvbGljaXRlZCBOZWlnaGJvciBBZHZlcnRpc2VtZW50IHNlbnQgZm9yICRJUCB3aXRoIG1hYyAkTUFDIHZpYSAkSUZBQ0UgZnJvbSAkSVBMTCIKCQlicmVhawoJZmkKZG9uZQoKbXNnICJTZXR0aW5nICRJUCBwcmVmZmVyZWQiCm1zZyAiJChpcHY2X3NldF9wcmVmZmVyZWQgJElQKSIKCmlwdjZfZ2V0X29ubGlua19wcmVmaXhlcyAkSUZBQ0V8d2hpbGUgSUZTPS8gcmVhZCBuZXQgbGVuOyBkbwoJYWRkcl9tYXNrZWQ9JChpcHY2X21hc2tlZF9hZGRyICRJUCAkbGVuIDApCglhZGRyX25ldD0kKGlwdjZfZXhwYW5kICRuZXQpCglpZiBbICIkYWRkcl9tYXNrZWQiID0gIiRhZGRyX25ldCIgXTsgdGhlbgoJCWZvciB0YXJnZXQgaW4gJGFkZHJfbWFza2VkICQoaXB2Nl9tYXNrZWRfYWRkciAkSVAgJGxlbiAxKTsgZG8KCQkJaWYgcGluZzYgLWMxIC1JICRJUCAkdGFyZ2V0ID4vZGV2L251bGw7IHRoZW4KCQkJCW1zZyAiVGFyZ2V0ICR0YXJnZXQgcGluZ2VkIGZyb20gJElQIE9LIgoJCQllbHNlCgkJCQltc2cgIkVSUk9SOiBDb3VsZCBub3QgcGluZyAkdGFyZ2V0IGZyb20gJElQIgoJCQlmaQoJCWRvbmUKCWZpCmRvbmUK|/target/usr/bin/base64 -d >/target/usr/sbin/ndisc_update; \
    chmod a+x /target/usr/sbin/ndisc_update; \
    echo IyEvdXNyL2Jpbi9lbnYgYmFzaApleHBvcnQgUEFUSD0kUEFUSDovdXNyL2xvY2FsL3NiaW46L3Vzci9sb2NhbC9iaW4KCk1FPSR7MCMjKi99Cgptc2coKXsKICAgIGVjaG8gIiQxIgogICAgbG9nZ2VyIC10ICIke01FfVskJF0iICIkMSIKfQoKSUZBQ0U9IiR7MTotJChpcHY2X2dldF9kZWZhdWx0X2lmYWNlKX0iCgpMRUFTRVM9IgpkdWlkX2RoY2xpZW50CS92YXIvbGliL2RoY2xpZW50L2RoY2xpZW50Ni00OTI5OTUxYS04NmQ2LTQyOTgtYjA1My1mOWNlY2ZjYTdjMWMtSUZBQ0UubGVhc2UKZHVpZF9kaGNsaWVudAkvdmFyL2xpYi9kaGNsaWVudC9kaGNsaWVudDYtSUZBQ0UubGVhc2VzCmR1aWRfZGhjbGllbnQJL3Zhci9saWIvZGhjbGllbnQvZGhjbGllbnQ2LmxlYXNlcwpkdWlkX2RoY2xpZW50CS92YXIvbGliL2RoY3AvZGhjbGllbnQ2LklGQUNFLmxlYXNlcwpkdWlkX2RoY2xpZW50CS92YXIvbGliL2RoY3AvZGhjbGllbnQ2LmxlYXNlcwpkdWlkX2RoY2xpZW50CS92YXIvZGIvZGhjbGllbnQ2LmxlYXNlcwpkdWlkX2RoY3B2NgkvdmFyL2xpYi9kaGNwdjYvY2xpZW50Ni5sZWFzZXMgL3Zhci9saWIvZGhjcHY2L2RoY3A2Y19kdWlkCiIKCmR1aWRfZGhjbGllbnQoKXsKIGxvY2FsIGxlYXNlX2ZpbGU9IiQxIgogICAgZHVpZD0iZGVmYXVsdC1kdWlkIFwiXDAwMFwwMDQiCiAgICBmb3IgaSBpbiAkVVVJRDsgZG8KCW51bT1gcHJpbnRmICIlZCIgMHgkaWAKCW9jdG51bT1gcHJpbnRmICJcJTAzbyIgMHgkaWAKCWlmIFsgJG51bSAtbHQgMTI3IC1hICRudW0gLWd0IDMxIF07IHRoZW4KCSAgICBvY3RudW09YHByaW50ZiAkb2N0bnVtYAoJZmkKCWR1aWQ9JGR1aWQkb2N0bnVtCiAgICBkb25lCiAgICBkdWlkPSIkZHVpZFwiOyIKCiAgICBpZiBbICIkKGhlYWQgLTEgJGxlYXNlX2ZpbGUgMj4vZGV2L251bGwpIiAhPSAiJGR1aWQiIF07IHRoZW4KICAgICAgICBlY2hvICIkZHVpZCIgPiAkbGVhc2VfZmlsZQogICAgICAgIG1zZyAiRFVJRCB1cGRhdGVkIHRvIHV1aWQ6ICRHVUlEIgogICAgZWxzZQogICAgICAgIG1zZyAiRFVJRCBpcyBPSyIKICAgIGZpCiAgICByZXR1cm4gMAp9CgpkdWlkX2RoY3B2NigpewogbG9jYWwgbGVhc2VfZmlsZT0iJDEiCiBsb2NhbCBkdWlkX2ZpbGU9IiQyIgogICAgSUQ9IjAwIDA0ICRVVUlEIiAKICAgIE49IiQocHJpbnRmICUwMlggJChlY2hvICRJRHx3YyAtdykpIgogICAgUkVDPSIkKGVjaG8gJE4gMDAgJElEfHRyIFs6bG93ZXI6XSBbOnVwcGVyOl0pIgogICAgQ1VSPSIkKGVjaG8gJChvZCAtQSBuIC10IHgxICIkZHVpZF9maWxlIiAyPi9kZXYvbnVsbHx0ciAnWzpsb3dlcjpdJyAnWzp1cHBlcjpdJykpIgogICAgaWYgWyAiJENVUiIgPSAiJFJFQyIgXTsgdGhlbgogICAgICAgIG1zZyAiRFVJRCBpcyBPSyIKICAgICAgICByZXR1cm4gMAogICAgZmkKICAgIGZvciBpIGluICRSRUM7IGRvCiAgICAgICAgcHJpbnRmICQocHJpbnRmICJcJTAzbyIgMHgkaSkKICAgIGRvbmUgPiAiJGR1aWRfZmlsZSIKICAgIG1zZyAiRFVJRCB1cGRhdGVkIHRvIHV1aWQ6ICRHVUlEIgogICAgcm0gLWYgIiRsZWFzZV9maWxlIiAyPi9kZXYvbnVsbAogICAgcmV0dXJuIDAKfQoKR1VJRD0iJChkbWlkZWNvZGUgLXMgc3lzdGVtLXV1aWQpIgpVVUlEPSIkKGVjaG8gJEdVSUR8c2VkIC1lIHMvLS8vZyAtZSAicy9cKC4uXCkvXDEgL2ciKSIKR1VJRD0iJChlY2hvICRHVUlEfHRyICdbOnVwcGVyOl0nICdbOmxvd2VyOl0nKSIKd2hpbGUgcmVhZCB1cGRhdGVyIGxlYXNlX2ZpbGUgZHVpZF9maWxlOyBkbwogICAgaWYgWyAtZCAiJHtsZWFzZV9maWxlJS8qfSIgXTsgdGhlbgoJbXNnICJQcm9jZXNzaW5nICR1cGRhdGVyOiAke2R1aWRfZmlsZTotJGxlYXNlX2ZpbGV9IgoJJHVwZGF0ZXIgIiRsZWFzZV9maWxlIiAiJGR1aWRfZmlsZSIKICAgIGZpCmRvbmUgPDwgRU9GCiQoZWNobyAiJExFQVNFUyJ8c2VkICJzL0lGQUNFLyRJRkFDRS9nIikKRU9GCg==|/target/usr/bin/base64 -d >/target/usr/sbin/duid-uuid-update; \
    chmod a+x /target/usr/sbin/duid-uuid-update; \
    echo aXAgLTYgLW8gYSBzIHNjb3BlIGdsb2JhbCBwZXJtYW5lbnR8aGVhZCAtMXxhd2sgJ3tzcGxpdCgkNCxhLCIvIik7IHByaW50IGFbMV0iICIkMn0nCg==|/target/usr/bin/base64 -d >/target/usr/sbin/ipv6_get_global_permanent; \
    chmod a+x /target/usr/sbin/ipv6_get_global_permanent; \
    echo SVA9JDEKaWYgWyAteiAiJElQIiBdOyB0aGVuCiBlY2hvICJFUlJPUjogc3BlY2lmeSBJUHY2IGFkZHJlc3MiID4mMgogZXhpdCAxCmZpCmlmIGlwIC02IHIgZyAyYTAyOjp8Z3JlcCAic3JjICRJUCIgPi9kZXYvbnVsbDsgdGhlbgoJZWNobyAkMSBhbHJlYWR5IHByZWZmZXJlZAplbHNlCglJRkFDRT0iJHsyOi0kKGlwdjZfZ2V0X2lmYWNlX2J5X2lwICRJUCl9IgkKCWlmIFsgLXogIiRJRkFDRSIgXTsgdGhlbgoJCWVjaG8gIkVSUk9SOiBpbnRlcmZhY2Ugbm90IGZvdW5kIGZvciAkSVAiID4mMgoJCWV4aXQgMgoJZmkKCWVjaG8gInNldHRpbmcgJDEgcHJlZmZlcmVkIG5vdCB5ZXQgc3VwcG9ydGVkIgpmaQo=|/target/usr/bin/base64 -d >/target/usr/sbin/ipv6_set_preffered; \
    chmod a+x /target/usr/sbin/ipv6_set_preffered; \
    echo aXAgLTYgLW8gYSBzfGdyZXAgIiAkMS8ifGN1dCAtZCIgIiAtZjIK|/target/usr/bin/base64 -d >/target/usr/sbin/ipv6_get_iface_by_ip; \
    chmod a+x /target/usr/sbin/ipv6_get_iface_by_ip; \
    echo IyEvYmluL3NoClsgLXogIiQxIiBdICYmIGV4aXQKaXAgLTYgYSBsIGRldiAkMSBzY29wZSBsaW5rfGF3ayAne2lmKCQxPT0iaW5ldDYiKXByaW50ICQyfSd8YXdrIC1GLyAne3ByaW50ICQxfSd8aGVhZCAtMQo=|/target/usr/bin/base64 -d >/target/usr/sbin/ipv6_get_ipv6ll_by_iface; \
    chmod a+x /target/usr/sbin/ipv6_get_ipv6ll_by_iface; \
    echo SUZBQ0U9JHsxOi0kKGlwdjZfZ2V0X2RlZmF1bHRfaWZhY2UpfQppcCAtNiByb3V0ZSBsaXN0IGRldiAkSUZBQ0V8YXdrICckMX4iLyIgJiYgJDEhfiJeZmU4MDoiIHtwcmludCAkMX0nCgo=|/target/usr/bin/base64 -d >/target/usr/sbin/ipv6_get_onlink_prefixes; \
    chmod a+x /target/usr/sbin/ipv6_get_onlink_prefixes; \
    echo Y2F0IC9zeXMvY2xhc3MvbmV0LyQxL2FkZHJlc3MK|/target/usr/bin/base64 -d >/target/usr/sbin/ipv6_get_mac_by_iface; \
    chmod a+x /target/usr/sbin/ipv6_get_mac_by_iface; \
    echo ZWNobyBldGgwCg==|/target/usr/bin/base64 -d >/target/usr/sbin/ipv6_get_default_iface; \
    chmod a+x /target/usr/sbin/ipv6_get_default_iface; \
    echo IyEvYmluL3NoClBJREZJTEU9IiQobWt0ZW1wKSIKQ0xFQU49CmNsZWFudXAoKSB7CiBpZiBbIC16ICIkQ0xFQU4iIF07IHRoZW4KCWtpbGwgYGNhdCAiJFBJREZJTEUiYCAyPi9kZXYvbnVsbAoJcm0gLWYgIiRQSURGSUxFIgoJQ0xFQU49eWVzCiBmaQp9CnRyYXAgY2xlYW51cCAwIDEgMiAxNQooaXAgLTYgbW9uaXRvciBhZGRyZXNzICYgZWNobyAkISA+ICIkUElERklMRSIpfAoJc2VkIC1uICJzO15bWzpkaWdpdDpdXVwrOlxzXCtcKFtbOmFsbnVtOl1dXCtcKVxzXCtpbmV0NlxzXCtcKFtbOmFsbnVtOl06XVwrXCkvW1s6ZGlnaXQ6XV1cK1xzXCtzY29wZSBnbG9iYWxbWzpibGFuazpdXSokO1wyIFwxOzt0YTtiOzphIHA7ZWtpbGwgXCQoY2F0ICRQSURGSUxFKSI=|/target/usr/bin/base64 -d >/target/usr/sbin/ipv6_wait_for_global_permanent; \
    chmod a+x /target/usr/sbin/ipv6_wait_for_global_permanent; \
    dd bs=1M if=/dev/zero of=/target/var/tmp/zeros || : ;\
    rm -f /target/var/tmp/zeros
